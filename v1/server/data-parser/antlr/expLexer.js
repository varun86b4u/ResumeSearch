// Generated from exp.g4 by ANTLR 4.5.1
// jshint ignore: start
var antlr4 = require('antlr4/index');


var serializedATN = ["\u0003\u0430\ud6d1\u8206\uad2d\u4417\uaef1\u8d80\uaadd",
    "\u0002\u000b\u0092\b\u0001\u0004\u0002\t\u0002\u0004\u0003\t\u0003\u0004",
    "\u0004\t\u0004\u0004\u0005\t\u0005\u0004\u0006\t\u0006\u0004\u0007\t",
    "\u0007\u0004\b\t\b\u0004\t\t\t\u0004\n\t\n\u0003\u0002\u0003\u0002\u0003",
    "\u0002\u0005\u0002\u0019\n\u0002\u0003\u0003\u0003\u0003\u0005\u0003",
    "\u001d\n\u0003\u0003\u0004\u0003\u0004\u0003\u0004\u0003\u0004\u0003",
    "\u0004\u0003\u0004\u0003\u0004\u0003\u0004\u0003\u0004\u0003\u0004\u0003",
    "\u0004\u0003\u0004\u0003\u0004\u0005\u0004,\n\u0004\u0003\u0005\u0006",
    "\u0005/\n\u0005\r\u0005\u000e\u00050\u0003\u0006\u0006\u00064\n\u0006",
    "\r\u0006\u000e\u00065\u0003\u0006\u0003\u0006\u0006\u0006:\n\u0006\r",
    "\u0006\u000e\u0006;\u0003\u0007\u0003\u0007\u0003\u0007\u0003\u0007",
    "\u0003\u0007\u0003\u0007\u0003\u0007\u0003\u0007\u0003\u0007\u0003\u0007",
    "\u0003\u0007\u0003\u0007\u0003\u0007\u0003\u0007\u0003\u0007\u0003\u0007",
    "\u0003\u0007\u0003\u0007\u0003\u0007\u0003\u0007\u0003\u0007\u0003\u0007",
    "\u0003\u0007\u0003\u0007\u0003\u0007\u0003\u0007\u0003\u0007\u0003\u0007",
    "\u0003\u0007\u0003\u0007\u0003\u0007\u0003\u0007\u0003\u0007\u0003\u0007",
    "\u0003\u0007\u0003\u0007\u0003\u0007\u0003\u0007\u0003\u0007\u0005\u0007",
    "e\n\u0007\u0003\b\u0003\b\u0003\b\u0003\b\u0003\b\u0003\b\u0003\b\u0003",
    "\b\u0003\b\u0003\b\u0003\b\u0003\b\u0003\b\u0003\b\u0003\b\u0005\bv",
    "\n\b\u0003\t\u0003\t\u0003\t\u0003\t\u0003\t\u0003\t\u0003\t\u0003\t",
    "\u0003\t\u0003\t\u0003\t\u0003\t\u0003\t\u0003\t\u0003\t\u0003\t\u0003",
    "\t\u0003\t\u0005\t\u008a\n\t\u0003\n\u0006\n\u008d\n\n\r\n\u000e\n\u008e",
    "\u0003\n\u0003\n\u0002\u0002\u000b\u0003\u0003\u0005\u0004\u0007\u0005",
    "\t\u0006\u000b\u0007\r\b\u000f\t\u0011\n\u0013\u000b\u0003\u0002\u0004",
    "\u0003\u00022;\u0007\u0002\u000b\f\u000e\u000f\"\"))~~\u00a8\u0002\u0003",
    "\u0003\u0002\u0002\u0002\u0002\u0005\u0003\u0002\u0002\u0002\u0002\u0007",
    "\u0003\u0002\u0002\u0002\u0002\t\u0003\u0002\u0002\u0002\u0002\u000b",
    "\u0003\u0002\u0002\u0002\u0002\r\u0003\u0002\u0002\u0002\u0002\u000f",
    "\u0003\u0002\u0002\u0002\u0002\u0011\u0003\u0002\u0002\u0002\u0002\u0013",
    "\u0003\u0002\u0002\u0002\u0003\u0018\u0003\u0002\u0002\u0002\u0005\u001c",
    "\u0003\u0002\u0002\u0002\u0007+\u0003\u0002\u0002\u0002\t.\u0003\u0002",
    "\u0002\u0002\u000b3\u0003\u0002\u0002\u0002\rd\u0003\u0002\u0002\u0002",
    "\u000fu\u0003\u0002\u0002\u0002\u0011\u0089\u0003\u0002\u0002\u0002",
    "\u0013\u008c\u0003\u0002\u0002\u0002\u0015\u0019\u0005\t\u0005\u0002",
    "\u0016\u0019\u0005\u000b\u0006\u0002\u0017\u0019\u0005\r\u0007\u0002",
    "\u0018\u0015\u0003\u0002\u0002\u0002\u0018\u0016\u0003\u0002\u0002\u0002",
    "\u0018\u0017\u0003\u0002\u0002\u0002\u0019\u0004\u0003\u0002\u0002\u0002",
    "\u001a\u001d\u0005\u000f\b\u0002\u001b\u001d\u0005\u0011\t\u0002\u001c",
    "\u001a\u0003\u0002\u0002\u0002\u001c\u001b\u0003\u0002\u0002\u0002\u001d",
    "\u0006\u0003\u0002\u0002\u0002\u001e\u001f\u0007g\u0002\u0002\u001f",
    " \u0007z\u0002\u0002 !\u0007r\u0002\u0002!\"\u0007g\u0002\u0002\"#\u0007",
    "t\u0002\u0002#$\u0007k\u0002\u0002$%\u0007g\u0002\u0002%&\u0007p\u0002",
    "\u0002&\'\u0007e\u0002\u0002\',\u0007g\u0002\u0002()\u0007g\u0002\u0002",
    ")*\u0007z\u0002\u0002*,\u0007r\u0002\u0002+\u001e\u0003\u0002\u0002",
    "\u0002+(\u0003\u0002\u0002\u0002,\b\u0003\u0002\u0002\u0002-/\t\u0002",
    "\u0002\u0002.-\u0003\u0002\u0002\u0002/0\u0003\u0002\u0002\u00020.\u0003",
    "\u0002\u0002\u000201\u0003\u0002\u0002\u00021\n\u0003\u0002\u0002\u0002",
    "24\u0005\t\u0005\u000232\u0003\u0002\u0002\u000245\u0003\u0002\u0002",
    "\u000253\u0003\u0002\u0002\u000256\u0003\u0002\u0002\u000267\u0003\u0002",
    "\u0002\u000279\u000b\u0002\u0002\u00028:\u0005\t\u0005\u000298\u0003",
    "\u0002\u0002\u0002:;\u0003\u0002\u0002\u0002;9\u0003\u0002\u0002\u0002",
    ";<\u0003\u0002\u0002\u0002<\f\u0003\u0002\u0002\u0002=>\u0007q\u0002",
    "\u0002>?\u0007p\u0002\u0002?e\u0007g\u0002\u0002@A\u0007v\u0002\u0002",
    "AB\u0007y\u0002\u0002Be\u0007q\u0002\u0002CD\u0007v\u0002\u0002DE\u0007",
    "j\u0002\u0002EF\u0007t\u0002\u0002FG\u0007g\u0002\u0002Ge\u0007g\u0002",
    "\u0002HI\u0007h\u0002\u0002IJ\u0007q\u0002\u0002JK\u0007w\u0002\u0002",
    "Ke\u0007t\u0002\u0002LM\u0007h\u0002\u0002MN\u0007k\u0002\u0002NO\u0007",
    "x\u0002\u0002Oe\u0007g\u0002\u0002PQ\u0007u\u0002\u0002QR\u0007k\u0002",
    "\u0002Re\u0007z\u0002\u0002ST\u0007u\u0002\u0002TU\u0007g\u0002\u0002",
    "UV\u0007x\u0002\u0002VW\u0007g\u0002\u0002We\u0007p\u0002\u0002XY\u0007",
    "g\u0002\u0002YZ\u0007k\u0002\u0002Z[\u0007i\u0002\u0002[\\\u0007j\u0002",
    "\u0002\\e\u0007v\u0002\u0002]^\u0007p\u0002\u0002^_\u0007k\u0002\u0002",
    "_`\u0007p\u0002\u0002`e\u0007g\u0002\u0002ab\u0007v\u0002\u0002bc\u0007",
    "g\u0002\u0002ce\u0007p\u0002\u0002d=\u0003\u0002\u0002\u0002d@\u0003",
    "\u0002\u0002\u0002dC\u0003\u0002\u0002\u0002dH\u0003\u0002\u0002\u0002",
    "dL\u0003\u0002\u0002\u0002dP\u0003\u0002\u0002\u0002dS\u0003\u0002\u0002",
    "\u0002dX\u0003\u0002\u0002\u0002d]\u0003\u0002\u0002\u0002da\u0003\u0002",
    "\u0002\u0002e\u000e\u0003\u0002\u0002\u0002fg\u0007{\u0002\u0002gh\u0007",
    "g\u0002\u0002hi\u0007c\u0002\u0002ij\u0007t\u0002\u0002jv\u0007u\u0002",
    "\u0002kl\u0007{\u0002\u0002lm\u0007g\u0002\u0002mn\u0007c\u0002\u0002",
    "no\u0007t\u0002\u0002ov\u0007\"\u0002\u0002pq\u0007{\u0002\u0002qv\u0007",
    "t\u0002\u0002rs\u0007{\u0002\u0002st\u0007t\u0002\u0002tv\u0007u\u0002",
    "\u0002uf\u0003\u0002\u0002\u0002uk\u0003\u0002\u0002\u0002up\u0003\u0002",
    "\u0002\u0002ur\u0003\u0002\u0002\u0002v\u0010\u0003\u0002\u0002\u0002",
    "wx\u0007o\u0002\u0002xy\u0007q\u0002\u0002yz\u0007p\u0002\u0002z{\u0007",
    "v\u0002\u0002{|\u0007j\u0002\u0002|\u008a\u0007u\u0002\u0002}~\u0007",
    "o\u0002\u0002~\u007f\u0007q\u0002\u0002\u007f\u0080\u0007p\u0002\u0002",
    "\u0080\u0081\u0007v\u0002\u0002\u0081\u008a\u0007j\u0002\u0002\u0082",
    "\u0083\u0007o\u0002\u0002\u0083\u0084\u0007q\u0002\u0002\u0084\u008a",
    "\u0007p\u0002\u0002\u0085\u0086\u0007o\u0002\u0002\u0086\u0087\u0007",
    "q\u0002\u0002\u0087\u0088\u0007p\u0002\u0002\u0088\u008a\u0007u\u0002",
    "\u0002\u0089w\u0003\u0002\u0002\u0002\u0089}\u0003\u0002\u0002\u0002",
    "\u0089\u0082\u0003\u0002\u0002\u0002\u0089\u0085\u0003\u0002\u0002\u0002",
    "\u008a\u0012\u0003\u0002\u0002\u0002\u008b\u008d\t\u0003\u0002\u0002",
    "\u008c\u008b\u0003\u0002\u0002\u0002\u008d\u008e\u0003\u0002\u0002\u0002",
    "\u008e\u008c\u0003\u0002\u0002\u0002\u008e\u008f\u0003\u0002\u0002\u0002",
    "\u008f\u0090\u0003\u0002\u0002\u0002\u0090\u0091\b\n\u0002\u0002\u0091",
    "\u0014\u0003\u0002\u0002\u0002\r\u0002\u0018\u001c+05;du\u0089\u008e",
    "\u0003\b\u0002\u0002"].join("");


var atn = new antlr4.atn.ATNDeserializer().deserialize(serializedATN);

var decisionsToDFA = atn.decisionToState.map( function(ds, index) { return new antlr4.dfa.DFA(ds, index); });

function expLexer(input) {
	antlr4.Lexer.call(this, input);
    this._interp = new antlr4.atn.LexerATNSimulator(this, atn, decisionsToDFA, new antlr4.PredictionContextCache());
    return this;
}

expLexer.prototype = Object.create(antlr4.Lexer.prototype);
expLexer.prototype.constructor = expLexer;

expLexer.EOF = antlr4.Token.EOF;
expLexer.EXP_VALUE = 1;
expLexer.IN_TIME = 2;
expLexer.EXPERIENCE = 3;
expLexer.INT = 4;
expLexer.DOUBLE = 5;
expLexer.ALPHANUMERIC = 6;
expLexer.YEAR = 7;
expLexer.MONTH = 8;
expLexer.WS = 9;


expLexer.modeNames = [ "DEFAULT_MODE" ];

expLexer.literalNames = [  ];

expLexer.symbolicNames = [ 'null', "EXP_VALUE", "IN_TIME", "EXPERIENCE", 
                           "INT", "DOUBLE", "ALPHANUMERIC", "YEAR", "MONTH", 
                           "WS" ];

expLexer.ruleNames = [ "EXP_VALUE", "IN_TIME", "EXPERIENCE", "INT", "DOUBLE", 
                       "ALPHANUMERIC", "YEAR", "MONTH", "WS" ];

expLexer.grammarFileName = "exp.g4";



exports.expLexer = expLexer;

